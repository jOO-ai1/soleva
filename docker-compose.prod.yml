services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: solevaeg-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - solevaeg-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: solevaeg-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - solevaeg-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: solevaeg-backend-prod
    restart: unless-stopped
    env_file:
      - .env.production
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    networks:
      - solevaeg-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
      - 1.0.0.1

  # Frontend (React) - Production Build
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: production
    container_name: solevaeg-frontend-prod
    restart: unless-stopped
    env_file:
      - .env.production
    # Temporarily removed volume mount to allow fresh build files
    # volumes:
    #   - frontend_static:/usr/share/nginx/html:ro
    networks:
      - solevaeg-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
      - 1.0.0.1

  # Admin Panel
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
      target: production
    container_name: solevaeg-admin-prod
    restart: unless-stopped
    env_file:
      - .env.production
    volumes:
      - admin_static:/usr/share/nginx/html:ro
    networks:
      - solevaeg-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
      - 1.0.0.1

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine3.19
    container_name: solevaeg-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d/production.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/ssl:/etc/letsencrypt:ro
      - ./docker/nginx/certbot-webroot:/var/www/certbot:ro
      - backend_uploads:/var/www/uploads:ro
      - frontend_static:/var/www/frontend:ro
      - admin_static:/var/www/admin:ro
      - nginx_logs:/var/log/nginx
    networks:
      - solevaeg-network
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
      admin:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  frontend_static:
    driver: local
  admin_static:
    driver: local
  nginx_logs:
    driver: local

networks:
  solevaeg-network:
    driver: bridge
