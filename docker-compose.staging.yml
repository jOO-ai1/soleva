version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: solevaeg-staging-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-solevaeg_staging}
      POSTGRES_USER: ${POSTGRES_USER:-solevaeg_staging}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-staging_password_123}
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
      - ./backend/prisma/seed-staging.sql:/docker-entrypoint-initdb.d/seed.sql:ro
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    networks:
      - solevaeg-staging-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-solevaeg_staging} -d ${POSTGRES_DB:-solevaeg_staging}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: solevaeg-staging-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-staging_redis_123}
    volumes:
      - redis_staging_data:/data
    ports:
      - "${REDIS_PORT:-6380}:6379"
    networks:
      - solevaeg-staging-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-staging_redis_123}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: solevaeg-staging-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - DATABASE_URL=postgresql://${POSTGRES_USER:-solevaeg_staging}:${POSTGRES_PASSWORD:-staging_password_123}@postgres:5432/${POSTGRES_DB:-solevaeg_staging}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-staging_redis_123}@redis:6379
      - JWT_SECRET=${JWT_SECRET:-staging_jwt_secret_change_in_production}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-staging_refresh_secret_change_in_production}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-admin@solevaeg.com}
      - SMTP_PASS=${SMTP_PASS:-change_this_email_password}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_REGION=${AWS_REGION:-eu-west-1}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-solevaeg-staging}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - SENTRY_DSN=${SENTRY_DSN:-}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@solevaeg.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-?3aeeSjqq}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID:-}
      - ENCRYPTION_MASTER_KEY=${ENCRYPTION_MASTER_KEY:-staging_encryption_key_32_chars_min}
    volumes:
      - ./backend:/app
      - backend_staging_uploads:/app/uploads
      - backend_staging_logs:/app/logs
      - /app/node_modules
    ports:
      - "${BACKEND_PORT:-3011}:3001"
    networks:
      - solevaeg-staging-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend (React)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: development
      args:
        - VITE_API_URL=http://localhost:3011/api/v1
        - VITE_APP_NAME=Soleva Staging
        - VITE_GA4_MEASUREMENT_ID=${VITE_GA4_MEASUREMENT_ID:-}
        - VITE_FACEBOOK_PIXEL_ID=${VITE_FACEBOOK_PIXEL_ID:-}
        - VITE_GTM_CONTAINER_ID=${VITE_GTM_CONTAINER_ID:-}
        - VITE_SENTRY_DSN=${VITE_SENTRY_DSN:-}
        - VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID:-}
        - VITE_FACEBOOK_APP_ID=${VITE_FACEBOOK_APP_ID:-}
    container_name: solevaeg-staging-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./index.html:/app/index.html
      - ./package.json:/app/package.json
      - ./tailwind.config.js:/app/tailwind.config.js
      - ./vite.config.ts:/app/vite.config.ts
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT:-5174}:5173"
    networks:
      - solevaeg-staging-network
    depends_on:
      - backend

  # Admin Panel
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
      target: development
    container_name: solevaeg-staging-admin
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - REACT_APP_API_URL=http://localhost:3011/api/v1
      - REACT_APP_NAME=Soleva Staging Admin
    volumes:
      - ./admin/src:/app/src
      - ./admin/public:/app/public
      - /app/node_modules
    ports:
      - "${ADMIN_PORT:-3012}:3000"
    networks:
      - solevaeg-staging-network
    depends_on:
      - backend

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: solevaeg-staging-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d/staging.conf:/etc/nginx/conf.d/default.conf:ro
      - backend_staging_uploads:/var/www/uploads:ro
      - nginx_staging_logs:/var/log/nginx
    networks:
      - solevaeg-staging-network
    depends_on:
      - frontend
      - backend
      - admin
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_staging_data:
    driver: local
  redis_staging_data:
    driver: local
  backend_staging_uploads:
    driver: local
  backend_staging_logs:
    driver: local
  nginx_staging_logs:
    driver: local

networks:
  solevaeg-staging-network:
    driver: bridge
